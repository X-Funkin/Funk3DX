[gd_scene load_steps=6 format=2]

[ext_resource path="res://assets/scenes/Partner.tres" type="Texture" id=1]

[sub_resource type="VisualShaderNodeTexture" id=1]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarConstant" id=2]
constant = 1.0

[sub_resource type="VisualShader" id=3]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled, specular_schlick_ggx;

uniform sampler2D tex_frg_2;



void vertex() {
// Output:0

}

void fragment() {
// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, UV.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Scalar:3
	float n_out3p0 = 1.000000;

// Output:0
	ALBEDO = n_out2p0;
	ALPHA = n_out2p1;
	ALPHA_SCISSOR = n_out3p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 73.3312, 562.766 )
modes/cull = 2
modes/depth_draw = 3
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -20, 80 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 160, 540 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 2, 1, 0, 1, 3, 0, 0, 18 )

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )

[node name="Partner" type="Spatial"]

[node name="Sprite3D" type="Sprite3D" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 3.163, 0 )
material_override = SubResource( 4 )
shaded = true
alpha_cut = 2
texture = ExtResource( 1 )
