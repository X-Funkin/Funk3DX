[gd_resource type="ShaderMaterial" load_steps=7 format=2]

[ext_resource path="res://assets/scenes/Player.tres" type="Texture" id=1]

[sub_resource type="VisualShaderNodeTexture" id=3]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=4]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 10, 10, 10 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVec3Constant" id=12]
constant = Vector3( 1, 1, 1 )

[sub_resource type="VisualShaderNodeScalarConstant" id=13]
constant = 1.0

[sub_resource type="VisualShader" id=1]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled, specular_schlick_ggx;

uniform sampler2D tex_frg_2;



void vertex() {
// Output:0

}

void fragment() {
// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, UV.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Scalar:5
	float n_out5p0 = 1.000000;

// Output:0
	ALBEDO = n_out2p0;
	ALPHA = n_out2p1;
	ALPHA_SCISSOR = n_out5p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -97, 133 )
modes/cull = 2
modes/depth_draw = 3
nodes/fragment/2/node = SubResource( 3 )
nodes/fragment/2/position = Vector2( -320, 220 )
nodes/fragment/3/node = SubResource( 4 )
nodes/fragment/3/position = Vector2( -40, 120 )
nodes/fragment/4/node = SubResource( 12 )
nodes/fragment/4/position = Vector2( -60, 480 )
nodes/fragment/5/node = SubResource( 13 )
nodes/fragment/5/position = Vector2( 0, 420 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 2, 0, 3, 0, 2, 1, 0, 1, 5, 0, 0, 18 )

[resource]
shader = SubResource( 1 )
